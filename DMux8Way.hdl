// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
	
	Not(in=sel[0],out=sel0not);
	Not(in=sel[1],out=sel1not);
	Not(in=sel[2],out=sel2not);
	
	
	
	And(a=sel0not,b=sel1not,out=selauxa);
	And(a=sel2not,b=selauxa,out=sela);
	
	
	And(a=sel[0],b=sel1not,out=selauxb);
	And(a=sel2not,b=selauxb,out=selb);
	
	And(a=sel0not,b=sel[1],out=selauxc);
	And(a=sel2not,b=selauxc,out=selc);
	
	
	
	And(a=sel[0],b=sel[1],out=selauxd);
	And(a=sel2not,b=selauxd,out=seld);
	
	
	And(a=sel0not,b=sel1not,out=selauxe);
	And(a=sel[2],b=selauxe,out=sele);
	
	
	And(a=sel[0],b=sel1not,out=selauxf);
	And(a=sel[2],b=selauxf,out=self);
	
	And(a=sel0not,b=sel[1],out=selauxg);
	And(a=sel[2],b=selauxg,out=selg);
	
	
	
	And(a=sel[0],b=sel[1],out=selauxh);
	And(a=sel[2],b=selauxh,out=selh);
	
	
	
	
	And(a=in,b=sela,out=a);
	And(a=in,b=selb,out=b);
	And(a=in,b=selc,out=c);
	And(a=in,b=seld,out=d);
	And(a=in,b=sele,out=e);
	And(a=in,b=self,out=f);
	And(a=in,b=selg,out=g);
	And(a=in,b=selh,out=h);
	
	
	
	
}